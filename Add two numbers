class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode dummyHead = new ListNode(0); // Dummy head node
        ListNode current = dummyHead;         // Pointer to build the new list
        int carry = 0;                        // Initialize carry

        // Loop through lists l1 and l2 until you reach both ends
        while (l1 != null || l2 != null) {
            int x = (l1 != null) ? l1.val : 0; // Value from l1 or 0 if null
            int y = (l2 != null) ? l2.val : 0; // Value from l2 or 0 if null
            int sum = carry + x + y;          // Sum of current digits and carry
            carry = sum / 10;                 // Update carry
            current.next = new ListNode(sum % 10); // Create new node with digit value
            current = current.next;           // Move to next node

            // Move to the next nodes in l1 and l2
            if (l1 != null) l1 = l1.next;
            if (l2 != null) l2 = l2.next;
        }

        // Check if carry is greater than 0
        if (carry > 0) {
            current.next = new ListNode(carry); // Add remaining carry as a new node
        }

        return dummyHead.next; // Return the head of the new list
    }
}
